{"version":3,"sources":["modals/CreateTask.js","modals/EditTask.js","components/Task.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["CreateTask","modal","toggle","create","taskList","useState","taskTitle","setTaskTitle","taskDescription","setTaskDescription","taskDate","setTaskDate","handleChange","e","target","name","value","isOpen","fullscreen","centered","onSubmit","taskObj","length","className","type","placeholder","onChange","required","rows","onClick","EditTask","updateTask","taskId","setTaskId","taskCheck","setTaskCheck","useEffect","Id","Title","Description","Date","Check","color","preventDefault","tempObj","Task","deleteTask","updateListArray","setModal","toggleModal","obj","sm","body","inverse","style","backgroundColor","borderColor","marginBottom","defaultChecked","tag","TodoList","savedTaskList","localStorage","getItem","JSON","parse","setTaskList","id","removeItem","filter","task","updatedItem","map","setItem","stringify","d","displayDate","setDisplayDate","day","getDay","month","getMonth","date","getDate","year","getFullYear","dateFormat","format","isAll","setIsAll","setDate","index","tempList","push","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ed61fdd0.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\n\r\nfunction CreateTask({ modal, toggle, create, taskList }) {\r\n    const [taskTitle, setTaskTitle] = useState('');\r\n    const [taskDescription, setTaskDescription] = useState('');\r\n    const [taskDate, setTaskDate] = useState('');\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target\r\n\r\n        if (name === \"taskTitle\") {\r\n            setTaskTitle(value)\r\n        } if (name === \"taskDescription\") {\r\n            setTaskDescription(value)\r\n        } else {\r\n            setTaskDate(value)\r\n        }\r\n    }\r\n\r\n    const handleCreate = () => {\r\n        let taskObj = {}\r\n        taskObj[\"Id\"] = taskList.length + 1\r\n        taskObj[\"Title\"] = taskTitle\r\n        taskObj[\"Description\"] = taskDescription\r\n        taskObj[\"Date\"] = taskDate\r\n        taskObj[\"Check\"] = false\r\n        create(taskObj)\r\n        setTaskTitle(\"\")\r\n        setTaskDescription(\"\")\r\n        setTaskDate(\"\")\r\n    }\r\n    return (\r\n        <Modal\r\n            isOpen={modal}\r\n            toggle={toggle}\r\n            fullscreen=\"md\"\r\n            centered\r\n        >\r\n            <ModalHeader toggle={toggle}>\r\n                Create Task\r\n            </ModalHeader>\r\n            <form onSubmit={handleCreate}>\r\n            <ModalBody>\r\n                    <div className=\"form-group mb-3\">\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"taskTitle\"\r\n                            placeholder=\"Title\"\r\n                            value={taskTitle}\r\n                            onChange={handleChange}\r\n                            className=\"form-control\"\r\n                            required\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group mb-3\">\r\n                        <textarea\r\n                            name=\"taskDescription\"\r\n                            rows=\"5\"\r\n                            placeholder=\"Write something...\"\r\n                            value={taskDescription}\r\n                            onChange={handleChange}\r\n                            className=\"form-control\"\r\n                        >\r\n                        </textarea>\r\n                    </div>\r\n                    <div className=\"form-group mb-3\">\r\n                        <input\r\n                            type=\"date\"\r\n                            name=\"taskDate\"\r\n                            value={taskDate}\r\n                            onChange={handleChange}\r\n                            className=\"form-control\"\r\n                            required\r\n                        />\r\n                    </div>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n                <input \r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary\"\r\n                    value=\"Create\"\r\n                />\r\n                {' '}\r\n                <Button onClick={toggle}>\r\n                    Cancel\r\n                </Button>\r\n            </ModalFooter>\r\n            </form>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default CreateTask\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\n\r\nfunction EditTask({ modal, toggle, updateTask, taskObj }) {\r\n    const [taskId, setTaskId] = useState('');\r\n    const [taskTitle, setTaskTitle] = useState('');\r\n    const [taskDescription, setTaskDescription] = useState('');\r\n    const [taskDate, setTaskDate] = useState('');\r\n    const [taskCheck, setTaskCheck] = useState(false)\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target\r\n\r\n        if (name === \"taskTitle\") {\r\n            setTaskTitle(value)\r\n        } if (name === \"taskDescription\") {\r\n            setTaskDescription(value)\r\n        } if (name === \"taskDate\") {\r\n            setTaskDate(value)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        setTaskId(taskObj.Id)\r\n        setTaskTitle(taskObj.Title)\r\n        setTaskDescription(taskObj.Description)\r\n        setTaskDate(taskObj.Date)\r\n        setTaskCheck(taskObj.Check)\r\n    }, [])\r\n\r\n    const handleEdit = (e) => {\r\n        e.preventDefault();\r\n        let tempObj = {}\r\n        tempObj['Id'] = taskId\r\n        tempObj['Title'] = taskTitle\r\n        tempObj['Description'] = taskDescription\r\n        tempObj['Date'] = taskDate\r\n        tempObj['Check'] = taskCheck\r\n        updateTask(tempObj)\r\n    }\r\n    return (\r\n        <Modal\r\n            isOpen={modal}\r\n            toggle={toggle}\r\n            fullscreen=\"md\"\r\n            centered\r\n        >\r\n            <ModalHeader toggle={toggle}>\r\n                Edit Task\r\n            </ModalHeader>\r\n            <ModalBody>\r\n                <form>\r\n                    <div className=\"form-group mb-3\">\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"taskTitle\"\r\n                            placeholder=\"Title\"\r\n                            value={taskTitle}\r\n                            onChange={handleChange}\r\n                            className=\"form-control\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group mb-3\">\r\n                        <textarea\r\n                            name=\"taskDescription\"\r\n                            rows=\"5\"\r\n                            placeholder=\"Write something...\"\r\n                            value={taskDescription}\r\n                            onChange={handleChange}\r\n                            className=\"form-control\"\r\n                        >\r\n                        </textarea>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 mb-3\">\r\n                        <input\r\n                            type=\"date\"\r\n                            name=\"taskDate\"\r\n                            value={taskDate}\r\n                            onChange={handleChange}\r\n                            className=\"form-control\"\r\n                        />\r\n                    </div>\r\n                </form>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n                <Button\r\n                    color=\"primary\"\r\n                    onClick={handleEdit}\r\n                >\r\n                    Update\r\n                </Button>\r\n                {' '}\r\n                <Button onClick={toggle}>\r\n                    Cancel\r\n                </Button>\r\n            </ModalFooter>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default EditTask\r\n","import React, { useState } from 'react'\r\nimport EditTask from '../modals/EditTask';\r\nimport { Col, Card, CardTitle, CardText } from 'reactstrap';\r\n\r\nfunction Task({ taskObj, deleteTask, updateListArray }) {\r\n    const [modal, setModal] = useState(false)\r\n    const toggleModal = () => setModal(!modal)\r\n    const updateTask = (obj) => {\r\n        updateListArray(obj)\r\n        setModal(false)\r\n    }\r\n\r\n    const handleDelete = () => {\r\n        deleteTask(taskObj.Id)\r\n    }\r\n\r\n    function handleCheck() {\r\n        let tempObj = {}\r\n        tempObj['Id'] = taskObj.Id\r\n        tempObj['Title'] = taskObj.Title\r\n        tempObj['Description'] = taskObj.Description\r\n        tempObj['Date'] = taskObj.Date\r\n        tempObj['Check'] = !taskObj.Check\r\n        updateTask(tempObj)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Col sm=\"3\">\r\n                <Card body inverse style={{\r\n                    backgroundColor: '#474747',\r\n                    borderColor: '#363636',\r\n                    marginBottom: '1rem'\r\n                }}>\r\n                    <div className=\"form-check\">\r\n                        <input className=\"form-check-input\" type=\"checkbox\" onChange={handleCheck} defaultChecked={taskObj.Check}/>\r\n                    </div>\r\n                    <CardTitle tag=\"h5\">\r\n                        {taskObj.Title} {taskObj.Date}\r\n                    </CardTitle>\r\n                    <CardText style={{\r\n                        color: '#A8A7A7'\r\n                    }}>\r\n                        {taskObj.Description}\r\n                    </CardText>\r\n                    <div className=\"card-btn\">\r\n                        <i className=\"bi bi-pencil-square me-3\" style={{ \"cursor\": \"pointer\" }} onClick={toggleModal}></i>\r\n                        <i className=\"bi bi-trash\" style={{ \"cursor\": \"pointer\" }} onClick={handleDelete}></i>\r\n                    </div>\r\n                </Card>\r\n            </Col>\r\n\r\n            <EditTask modal={modal} toggle={toggleModal} updateTask={updateTask} taskObj={taskObj} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Task\r\n","import React, { useState, useEffect } from 'react'\r\nimport CreateTask from '../modals/CreateTask'\r\nimport Task from './Task';\r\nimport { Row } from 'reactstrap';\r\nimport { format } from 'date-fns';\r\n\r\nfunction TodoList() {\r\n    const [taskList, setTaskList] = useState(() => {\r\n        const savedTaskList = localStorage.getItem(\"taskList\");\r\n        if (savedTaskList) {\r\n            return JSON.parse(savedTaskList);\r\n        } else {\r\n            return [];\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('taskList', JSON.stringify(taskList))\r\n    }, [taskList])\r\n\r\n    function deleteTask(id) {\r\n        const removeItem = taskList.filter((task) => {\r\n            return task.Id !== id\r\n        })\r\n\r\n        setTaskList(removeItem);\r\n    }\r\n\r\n    function updateListArray(obj) {\r\n        const updatedItem = taskList.map((task) => {\r\n          return task.Id === obj.Id ? obj : task;\r\n        })\r\n\r\n        setTaskList(updatedItem);\r\n      }\r\n\r\n    const createTask = (taskObj) => {\r\n        let tempList = taskList\r\n        tempList.push(taskObj)\r\n        localStorage.setItem(\"taskList\", JSON.stringify(tempList))\r\n        setTaskList(tempList)\r\n        setModal(false)\r\n    }\r\n\r\n    const [modal, setModal] = useState(false)\r\n    const toggleModal = () => setModal(!modal)\r\n\r\n    const d = new Date();\r\n    const [displayDate, setDisplayDate] = useState(new Date())\r\n    const weekDay = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\n    const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'July', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec']\r\n\r\n    const day = weekDay[displayDate.getDay()]\r\n    const month = months[displayDate.getMonth()]\r\n    const date = displayDate.getDate()\r\n    const year = displayDate.getFullYear()\r\n    const dateFormat = format(displayDate, 'yyyy-MM-dd')\r\n\r\n    function nextDay() {\r\n        d.setDate(displayDate.getDate() + 1)\r\n        setDisplayDate(d)\r\n    }\r\n    function prevDay() {\r\n        d.setDate(displayDate.getDate() - 1)\r\n        setDisplayDate(d)\r\n    }\r\n\r\n    const [isAll, setIsAll] = useState(false)\r\n    const toggleAll = () => setIsAll(!isAll)\r\n\r\n    return (\r\n        <div className=\"todoList\">\r\n            <div className=\"header text-center\">\r\n                <h1 className=\"pt-5\">{day}</h1>\r\n                <h5 className=\"date mb-5\">{month} {date}, {year}</h5>\r\n                <button className=\"btn btn-primary mt-2 ms-2 me-2\" onClick={() => prevDay()}>Prev Day</button>\r\n                <button className=\"btn btn-primary mt-2 ms-2 me-2\" onClick={toggleAll}>{isAll ? \"Show Today's\" : \"Show All\"}</button>\r\n                <button className=\"btn btn-primary mt-2 ms-2 me-2\" onClick={() => nextDay()}>Next Day</button>\r\n                <button className=\"btn btn-primary btn-circle btn-md mt-2\" onClick={toggleModal}><i className=\"bi bi-plus\"></i></button>\r\n            </div>\r\n            <div className=\"container\">\r\n                <Row>\r\n                    {taskList.map((obj, index) =>\r\n                        isAll ?\r\n                            <Task taskObj={obj} deleteTask={deleteTask} updateListArray={updateListArray} key={index} />\r\n                            :\r\n                            obj.Date === dateFormat &&\r\n                            <Task taskObj={obj} deleteTask={deleteTask} updateListArray={updateListArray} key={index} />\r\n                    )}\r\n                </Row>\r\n            </div>\r\n            <CreateTask toggle={toggleModal} modal={modal} create={createTask} taskList={taskList} />\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default TodoList\r\n","import './App.css';\nimport TodoList from './components/TodoList';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}